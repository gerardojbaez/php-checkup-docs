(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{357:function(e,t,a){"use strict";a.r(t);var i=a(43),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Framework agnostic application health and requirement checks.")]),e._v(" "),a("h2",{attrs:{id:"why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[e._v("#")]),e._v(" Why")]),e._v(" "),a("p",[e._v("When developing self-hosted applications, it is common to provide users with a check-list of things that they must complete before installing an application on their servers. Or, you give them an easy way to view a global picture of how the application and server are performing at any given time — improving error debugging and communication with developers. PhpCheckup gives developers a quick and easy way to build such check-lists as a stand-alone package or directly integrated into their applications.")]),e._v(" "),a("h2",{attrs:{id:"use-cases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[e._v("#")]),e._v(" Use cases")]),e._v(" "),a("ul",[a("li",[e._v("Application pre-installation checks\n"),a("ul",[a("li",[e._v("For example, to make sure that the server meets all the minimum requirements")])])]),e._v(" "),a("li",[e._v("Application post-installation checks\n"),a("ul",[a("li",[e._v("For example, make sure that the front-page and API are returning 200 status code, and")]),e._v(" "),a("li",[e._v("oAuth server is properly configured, and")]),e._v(" "),a("li",[e._v("Installer is disabled")])])]),e._v(" "),a("li",[e._v("Application post-update checks")]),e._v(" "),a("li",[e._v("A webpage inside an administrative system showing all the health checks of the application.")]),e._v(" "),a("li",[e._v("A stand-alone package so users can check whether their server meet a minimum set of requirements for a particular application, before purchasing.")]),e._v(" "),a("li",[e._v("Application performance check-list and suggestions.")]),e._v(" "),a("li",[e._v("Perform environment-specific checks")])]),e._v(" "),a("h2",{attrs:{id:"example-health-checkss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-health-checkss"}},[e._v("#")]),e._v(" Example health checkss")]),e._v(" "),a("ul",[a("li",[e._v("URL HTTP Status")]),e._v(" "),a("li",[e._v("Database connection")]),e._v(" "),a("li",[e._v("Database type")]),e._v(" "),a("li",[e._v("Database version")]),e._v(" "),a("li",[e._v("PHP version")]),e._v(" "),a("li",[e._v("PHP installed extensions")]),e._v(" "),a("li",[e._v("PHP memory limit")]),e._v(" "),a("li",[e._v("PHP INI settings (more commonly used for suggestions and security checks)")]),e._v(" "),a("li",[e._v("Queue status")]),e._v(" "),a("li",[e._v("Last cronjob executed (maybe show a warning when last cronjob is older than a specified date)")]),e._v(" "),a("li",[e._v("Writable directory or file")]),e._v(" "),a("li",[e._v("Expected directory structure")]),e._v(" "),a("li",[e._v("Presence/absence of a file or directory")]),e._v(" "),a("li",[e._v("Payment gateway connection")]),e._v(" "),a("li",[e._v("Email service connection")]),e._v(" "),a("li",[e._v("Make sure private files like .env aren’t accessible publicly")]),e._v(" "),a("li",[e._v("Warn about debug flag on a production environment")]),e._v(" "),a("li",[e._v("SSL Check")]),e._v(" "),a("li",[e._v("Warn about permissive file-permissions")])])])}),[],!1,null,null,null);t.default=s.exports}}]);